[{"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/index.js":"1","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/reportWebVitals.js":"2","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/App.js":"3","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Body.js":"4","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Landing.js":"5","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/RowContainer.js":"6","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Column.js":"7","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/TileContainer.js":"8","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Row_.js":"9","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/NeighborhoodDropdown.js":"10","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Tile.js":"11","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/TileBlank.js":"12"},{"size":547,"mtime":1609345718266,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1608832195907,"results":"15","hashOfConfig":"14"},{"size":456,"mtime":1609970273272,"results":"16","hashOfConfig":"14"},{"size":6420,"mtime":1609967351151,"results":"17","hashOfConfig":"14"},{"size":2576,"mtime":1610063489616,"results":"18","hashOfConfig":"14"},{"size":4456,"mtime":1610059238923,"results":"19","hashOfConfig":"14"},{"size":2710,"mtime":1610059238922,"results":"20","hashOfConfig":"14"},{"size":3168,"mtime":1610063472793,"results":"21","hashOfConfig":"14"},{"size":2011,"mtime":1610044411641,"results":"22","hashOfConfig":"14"},{"size":3511,"mtime":1609952817637,"results":"23","hashOfConfig":"14"},{"size":6036,"mtime":1610064173238,"results":"24","hashOfConfig":"14"},{"size":900,"mtime":1610043902971,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"18owrn3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/index.js",[],["53","54"],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/reportWebVitals.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/App.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Body.js",["55","56","57"],"import React, { Component } from \"react\";\nimport RowContainer from \"./RowContainer\";\nimport Column from \"./Column\";\nimport Container from \"react-bootstrap/Container\";\n\nconst API = \"http://localhost:3000/neighborhoods\";\n\nclass Body extends Component {\n  constructor() {\n    super();\n\n    this.updateBedrooms = this.updateBedrooms.bind(this);\n  }\n\n  state = {\n    neighborhoods: [],\n    selectedNeighborhoodIDs: [],\n    priceLow: 2000,\n    priceHigh: 2099,\n    bedrooms: \"any\",\n    likedApartments: [],\n    dislikedApartments: []\n  };\n\n  updateBedrooms(event) {\n    this.setState({\n      bedrooms: event.target.value,\n    });\n  }\n\n  componentDidMount() {\n    fetch(API)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          neighborhoods: this.sortNeighborhoods(data),\n          selectedNeighborhoodIDs: this.allIDsFromJsonObject(data),\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  sortNeighborhoods = (jsonObj) => {\n    return jsonObj.sort((a, b) =>\n      a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1\n    );\n  };\n\n  allIDsFromJsonObject = (jsonObj) => {\n    return jsonObj.map((neighborhood) => neighborhood.id);\n  };\n\n  allNeighborhoodIDsAndNames = () => {\n    return this.state.neighborhoods.map((neighborhood) => {\n      return { id: neighborhood.id, name: neighborhood.name };\n    });\n  };\n\n  filterNeighborhoodsByPriceLow = () => {\n    let newArr = this.filterDislikedApartments().map((neighborhood) => ({\n      id: neighborhood.id,\n      name: neighborhood.name,\n      apartments: neighborhood.apartments.filter((apt) => {\n        if (this.state.bedrooms === \"any\") {\n          if (\n            apt.price >= parseInt(this.state.priceLow) - 100 &&\n            apt.price <= parseInt(this.state.priceHigh) - 100\n          ) {\n            return apt;\n          }\n        } else {\n          if (\n            apt.price >= parseInt(this.state.priceLow) - 100 &&\n            apt.price <= parseInt(this.state.priceHigh) - 100 &&\n            apt.bedrooms === parseInt(this.state.bedrooms)\n          ) {\n            return apt;\n          }\n        }\n      }),\n    }));\n    return newArr;\n  };\n\n  filterNeighborhoodsByPriceHigh = () => {\n    let newArr = this.filterDislikedApartments().map((neighborhood) => ({\n      id: neighborhood.id,\n      name: neighborhood.name,\n      apartments: neighborhood.apartments.filter((apt) => {\n        if (this.state.bedrooms === \"any\") {\n          if (\n            apt.price >= parseInt(this.state.priceLow) + 99 &&\n            apt.price <= parseInt(this.state.priceHigh) + 99\n          ) {\n            return apt;\n          }\n        } else {\n          if (\n            apt.price >= parseInt(this.state.priceLow) + 99 &&\n            apt.price <= parseInt(this.state.priceHigh) + 99 &&\n            apt.bedrooms === parseInt(this.state.bedrooms)\n          ) {\n            return apt;\n          }\n        }\n      }),\n    }));\n    return newArr;\n  };\n\n  filterNeighborhoodsByPriceCenter = () => {\n    let newArr = this.filterDislikedApartments().map((neighborhood) => ({\n      id: neighborhood.id,\n      name: neighborhood.name,\n      apartments: neighborhood.apartments.filter((apt) => {\n        if (this.state.bedrooms === \"any\") {\n          if (\n            apt.price >= parseInt(this.state.priceLow) &&\n            apt.price <= parseInt(this.state.priceHigh)\n          ) {\n            return apt;\n          }\n        } else {\n          if (\n            apt.price >= parseInt(this.state.priceLow)  &&\n            apt.price <= parseInt(this.state.priceHigh) &&\n            apt.bedrooms === parseInt(this.state.bedrooms)\n          ) {\n            return apt;\n          }\n        }\n      }),\n    }));\n    return newArr;\n  };\n\n\n  selectNeighborhoods = () => {\n    let selectedNeighborhoods = this.state.selectedNeighborhoodIDs.map((id) =>\n      this.state.neighborhoods.find((neighborhood) => neighborhood.id === id)\n    );\n    return selectedNeighborhoods;\n  };\n\n  filterDislikedApartments = () => {\n    let newArr = this.selectNeighborhoods().map(neighborhood => ({\n      id: neighborhood.id,\n      name: neighborhood.name,\n      apartments: neighborhood.apartments.filter((apt) => !this.state.dislikedApartments.includes(apt.id))\n    }))\n    return newArr\n  }\n\n  updateSelectedNeighborhoods = (neighborhoodArray) => {\n    this.setState({ selectedNeighborhoodIDs: neighborhoodArray });\n  };\n\n  updatePrice = (low, high) => {\n    this.setState({\n      priceLow: parseInt(low),\n      priceHigh: parseInt(high),\n    });\n  };\n\n  handleLike = (str, id) => {\n    if (str === \"like\"){\n      this.setState(prevState => {\n        return{\n          likedApartments: [...prevState.likedApartments, id ]\n        }\n      })\n    }\n    else if (str === \"unlike\"){\n      this.setState(prevState => {\n        return{\n          likedApartments: [...prevState.likedApartments.filter(aptId => aptId !== id)]\n        }\n      })\n    }\n  }\n\n  handleDislike = (str, id) => {\n    if (str === \"dislike\"){\n      this.setState(prevState => {\n        return{\n          dislikedApartments: [...prevState.dislikedApartments, id ]\n        }\n      })\n    }\n    else if (str === \"undislike\"){\n      this.setState(prevState => {\n        return{\n          dislikedApartments: [...prevState.dislikedApartments.filter(aptId => aptId !== id)]\n        }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Container id=\"body-container\" className=\"d-flex flex-column\" fluid>\n        <Column\n          neighborhoods={this.allNeighborhoodIDsAndNames()}\n          handleNeighborhoodChange={this.updateSelectedNeighborhoods}\n          selectedIDs={this.state.selectedNeighborhoodIDs}\n          priceLow={this.state.priceLow}\n          priceHigh={this.state.priceHigh}\n          updatePrice={this.updatePrice}\n          updateBedrooms={this.updateBedrooms}\n        />\n        <RowContainer\n          neighborhoodsCenter={this.filterNeighborhoodsByPriceCenter()}\n          neighborhoodsLow={this.filterNeighborhoodsByPriceLow()}\n          neighborhoodsHigh={this.filterNeighborhoodsByPriceHigh()}\n          priceLow={this.state.priceLow}\n          priceHigh={this.state.priceHigh}\n          handleLike={this.handleLike}\n          likedApts={this.state.likedApartments}\n          handleDislike={this.handleDislike}\n          dislikedApts={this.state.dislikedApartments}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default Body;\n","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Landing.js",["58","59"],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/RowContainer.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Column.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/TileContainer.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Row_.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/NeighborhoodDropdown.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Tile.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/TileBlank.js",["60","61"],"import React from 'react';\nimport Card from 'react-bootstrap/Card'\nimport Carousel from 'react-bootstrap/Carousel'\nimport Container from 'react-bootstrap/Container'\nimport { BsX as NoAptIcon } from 'react-icons/bs';\n\nconst PageLoadingCircle = () => {\n    return (\n        <div class=\"profile-main-loader\">\n            <div class=\"loader\">\n                <svg class=\"circular-loader\"viewBox=\"25 25 50 50\" >\n                    <circle class=\"loader-path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"#dddddd\" stroke-width=\"2\" />\n                </svg>\n            </div>\n        </div>\n    )\n}\n\nconst TileBlank = ({ loadingTile }) => {\n\n\n    return (\n        <Card className='blank'>\n            { \n                loadingTile ? \n                    <PageLoadingCircle /> : \n                    <NoAptIcon className='blank-tile-icon'/> \n            }\n        </Card>\n    );\n}\n\nexport default TileBlank;",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":65,"column":56,"nodeType":"68","messageId":"69","endLine":65,"endColumn":58},{"ruleId":"66","severity":1,"message":"67","line":91,"column":56,"nodeType":"68","messageId":"69","endLine":91,"endColumn":58},{"ruleId":"66","severity":1,"message":"67","line":117,"column":56,"nodeType":"68","messageId":"69","endLine":117,"endColumn":58},{"ruleId":"70","severity":1,"message":"71","line":54,"column":13,"nodeType":"72","endLine":54,"endColumn":84},{"ruleId":"70","severity":1,"message":"71","line":56,"column":17,"nodeType":"72","endLine":56,"endColumn":79},{"ruleId":"73","severity":1,"message":"74","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":16},{"ruleId":"73","severity":1,"message":"77","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":17},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Carousel' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]