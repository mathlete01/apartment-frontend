[{"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/index.js":"1","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/reportWebVitals.js":"2","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/App.js":"3","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Body.js":"4","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Landing.js":"5","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/RowContainer.js":"6","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Column.js":"7","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/TileContainer.js":"8","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Row_.js":"9","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/NeighborhoodDropdown.js":"10","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Tile.js":"11","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/TileBlank.js":"12"},{"size":547,"mtime":1609345718266,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1608832195907,"results":"15","hashOfConfig":"14"},{"size":456,"mtime":1609970273272,"results":"16","hashOfConfig":"14"},{"size":6420,"mtime":1609967351151,"results":"17","hashOfConfig":"14"},{"size":2553,"mtime":1609971660773,"results":"18","hashOfConfig":"14"},{"size":3667,"mtime":1609967351152,"results":"19","hashOfConfig":"14"},{"size":2182,"mtime":1609952817637,"results":"20","hashOfConfig":"14"},{"size":2538,"mtime":1609980955322,"results":"21","hashOfConfig":"14"},{"size":1978,"mtime":1609967351152,"results":"22","hashOfConfig":"14"},{"size":3511,"mtime":1609952817637,"results":"23","hashOfConfig":"14"},{"size":5373,"mtime":1609980955325,"results":"24","hashOfConfig":"14"},{"size":344,"mtime":1609981567171,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"18owrn3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/index.js",[],["54","55"],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/reportWebVitals.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/App.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Body.js",["56","57","58"],"import React, { Component } from \"react\";\nimport RowContainer from \"./RowContainer\";\nimport Column from \"./Column\";\nimport Container from \"react-bootstrap/Container\";\n\nconst API = \"http://localhost:3000/neighborhoods\";\n\nclass Body extends Component {\n  constructor() {\n    super();\n\n    this.updateBedrooms = this.updateBedrooms.bind(this);\n  }\n\n  state = {\n    neighborhoods: [],\n    selectedNeighborhoodIDs: [],\n    priceLow: 2000,\n    priceHigh: 2099,\n    bedrooms: \"any\",\n    likedApartments: [],\n    dislikedApartments: []\n  };\n\n  updateBedrooms(event) {\n    this.setState({\n      bedrooms: event.target.value,\n    });\n  }\n\n  componentDidMount() {\n    fetch(API)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          neighborhoods: this.sortNeighborhoods(data),\n          selectedNeighborhoodIDs: this.allIDsFromJsonObject(data),\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  sortNeighborhoods = (jsonObj) => {\n    return jsonObj.sort((a, b) =>\n      a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1\n    );\n  };\n\n  allIDsFromJsonObject = (jsonObj) => {\n    return jsonObj.map((neighborhood) => neighborhood.id);\n  };\n\n  allNeighborhoodIDsAndNames = () => {\n    return this.state.neighborhoods.map((neighborhood) => {\n      return { id: neighborhood.id, name: neighborhood.name };\n    });\n  };\n\n  filterNeighborhoodsByPriceLow = () => {\n    let newArr = this.filterDislikedApartments().map((neighborhood) => ({\n      id: neighborhood.id,\n      name: neighborhood.name,\n      apartments: neighborhood.apartments.filter((apt) => {\n        if (this.state.bedrooms === \"any\") {\n          if (\n            apt.price >= parseInt(this.state.priceLow) - 100 &&\n            apt.price <= parseInt(this.state.priceHigh) - 100\n          ) {\n            return apt;\n          }\n        } else {\n          if (\n            apt.price >= parseInt(this.state.priceLow) - 100 &&\n            apt.price <= parseInt(this.state.priceHigh) - 100 &&\n            apt.bedrooms === parseInt(this.state.bedrooms)\n          ) {\n            return apt;\n          }\n        }\n      }),\n    }));\n    return newArr;\n  };\n\n  filterNeighborhoodsByPriceHigh = () => {\n    let newArr = this.filterDislikedApartments().map((neighborhood) => ({\n      id: neighborhood.id,\n      name: neighborhood.name,\n      apartments: neighborhood.apartments.filter((apt) => {\n        if (this.state.bedrooms === \"any\") {\n          if (\n            apt.price >= parseInt(this.state.priceLow) + 99 &&\n            apt.price <= parseInt(this.state.priceHigh) + 99\n          ) {\n            return apt;\n          }\n        } else {\n          if (\n            apt.price >= parseInt(this.state.priceLow) + 99 &&\n            apt.price <= parseInt(this.state.priceHigh) + 99 &&\n            apt.bedrooms === parseInt(this.state.bedrooms)\n          ) {\n            return apt;\n          }\n        }\n      }),\n    }));\n    return newArr;\n  };\n\n  filterNeighborhoodsByPriceCenter = () => {\n    let newArr = this.filterDislikedApartments().map((neighborhood) => ({\n      id: neighborhood.id,\n      name: neighborhood.name,\n      apartments: neighborhood.apartments.filter((apt) => {\n        if (this.state.bedrooms === \"any\") {\n          if (\n            apt.price >= parseInt(this.state.priceLow) &&\n            apt.price <= parseInt(this.state.priceHigh)\n          ) {\n            return apt;\n          }\n        } else {\n          if (\n            apt.price >= parseInt(this.state.priceLow)  &&\n            apt.price <= parseInt(this.state.priceHigh) &&\n            apt.bedrooms === parseInt(this.state.bedrooms)\n          ) {\n            return apt;\n          }\n        }\n      }),\n    }));\n    return newArr;\n  };\n\n\n  selectNeighborhoods = () => {\n    let selectedNeighborhoods = this.state.selectedNeighborhoodIDs.map((id) =>\n      this.state.neighborhoods.find((neighborhood) => neighborhood.id === id)\n    );\n    return selectedNeighborhoods;\n  };\n\n  filterDislikedApartments = () => {\n    let newArr = this.selectNeighborhoods().map(neighborhood => ({\n      id: neighborhood.id,\n      name: neighborhood.name,\n      apartments: neighborhood.apartments.filter((apt) => !this.state.dislikedApartments.includes(apt.id))\n    }))\n    return newArr\n  }\n\n  updateSelectedNeighborhoods = (neighborhoodArray) => {\n    this.setState({ selectedNeighborhoodIDs: neighborhoodArray });\n  };\n\n  updatePrice = (low, high) => {\n    this.setState({\n      priceLow: parseInt(low),\n      priceHigh: parseInt(high),\n    });\n  };\n\n  handleLike = (str, id) => {\n    if (str === \"like\"){\n      this.setState(prevState => {\n        return{\n          likedApartments: [...prevState.likedApartments, id ]\n        }\n      })\n    }\n    else if (str === \"unlike\"){\n      this.setState(prevState => {\n        return{\n          likedApartments: [...prevState.likedApartments.filter(aptId => aptId !== id)]\n        }\n      })\n    }\n  }\n\n  handleDislike = (str, id) => {\n    if (str === \"dislike\"){\n      this.setState(prevState => {\n        return{\n          dislikedApartments: [...prevState.dislikedApartments, id ]\n        }\n      })\n    }\n    else if (str === \"undislike\"){\n      this.setState(prevState => {\n        return{\n          dislikedApartments: [...prevState.dislikedApartments.filter(aptId => aptId !== id)]\n        }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Container id=\"body-container\" className=\"d-flex flex-column\" fluid>\n        <Column\n          neighborhoods={this.allNeighborhoodIDsAndNames()}\n          handleNeighborhoodChange={this.updateSelectedNeighborhoods}\n          selectedIDs={this.state.selectedNeighborhoodIDs}\n          priceLow={this.state.priceLow}\n          priceHigh={this.state.priceHigh}\n          updatePrice={this.updatePrice}\n          updateBedrooms={this.updateBedrooms}\n        />\n        <RowContainer\n          neighborhoodsCenter={this.filterNeighborhoodsByPriceCenter()}\n          neighborhoodsLow={this.filterNeighborhoodsByPriceLow()}\n          neighborhoodsHigh={this.filterNeighborhoodsByPriceHigh()}\n          priceLow={this.state.priceLow}\n          priceHigh={this.state.priceHigh}\n          handleLike={this.handleLike}\n          likedApts={this.state.likedApartments}\n          handleDislike={this.handleDislike}\n          dislikedApts={this.state.dislikedApartments}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default Body;\n","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Landing.js",["59","60"],"import React, { useState, useEffect } from 'react'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n// import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport TileContainer from \"./TileContainer\";\nimport browseByNeighborhoodPNG from '../assets/landing-page-browse-by-neighborhood.png';\nimport browseByPriceRangePNG from '../assets/landing-page-browse-by-price-range.png';\nimport { NavLink } from 'react-router-dom';\n\nconst Landing = () => {\n\n    const url = 'http://localhost:3000/neighborhoods/sample'\n\n    const [neighborhoods, setNeighborhoods] = useState([]);\n\n    useEffect(() => {\n        fetch(url)\n            .then( resp => resp.json() )\n            .then( json => {\n                console.log('FETCHING!')\n                const neighborhoodsWithFilteredApartments = filterNeighborhoodsBySamplePrice(json) \n                setNeighborhoods( neighborhoodsWithFilteredApartments )\n            })\n    }, [])\n\n    const filterNeighborhoodsBySamplePrice = ( neighborhoodsArray ) => {\n        return neighborhoodsArray.map( neighborhood => ({\n            id: neighborhood.id,\n            name: neighborhood.name,\n            apartments: neighborhood.apartments.filter( apartment => apartment.price >= 2000 && apartment.price < 2500 )\n        }))\n    }\n\n    const buildSampleNeighborhoods = () => {\n        return neighborhoods.map( neighborhood => (\n            <TileContainer key={ neighborhood.id } neighborhood={ neighborhood } />\n        ))\n    }\n\n    return (\n        <Container id='landing-page' className='d-flex justify-content-start align-items-stretch' fluid>\n            <div className='flex-grow-1'>\n                <Jumbotron id='welcome-box' className='shadow'>\n                    <h1>Hello, world!</h1>\n                    <p>\n                        This is a simple hero unit, a simple jumbotron-style component for calling\n                        extra attention to featured content or information.\n                    </p>\n                    <p>\n                        <NavLink exact to='browse'>Browse our listings!</NavLink>\n                    </p>\n                </Jumbotron>\n            </div>\n            <img id='browse-by-neighborhood-img' src={ browseByNeighborhoodPNG } />\n            <div id='sample-container' className='d-flex flex-column justify-content-between'>\n                <img id='browse-by-price-img' src={ browseByPriceRangePNG } />\n                { buildSampleNeighborhoods() }\n            </div>\n        </Container>\n    );\n}\n\nexport default Landing;\n","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/RowContainer.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Column.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/TileContainer.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Row_.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/NeighborhoodDropdown.js",[],"/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/Tile.js",["61"],"import React, { useState } from \"react\"\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport {FaRegThumbsUp} from \"react-icons/fa\"\nimport {FaRegThumbsDown} from \"react-icons/fa\"\nimport {FaThumbsUp} from \"react-icons/fa\"\nimport {FaThumbsDown} from \"react-icons/fa\"\nimport {BiRadioCircle} from \"react-icons/bi\"\nimport Carousel from 'react-bootstrap/Carousel'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nconst Tile = ({apartment, handleLike, likedApts, handleDislike, apartmentIsDisliked}) => {\n\n    //like / dislike buttons\n    const [display, setDisplay] = useState(false);\n    const showButton = e => {\n        e.preventDefault();\n        setDisplay(true);\n    };\n\n    const hideButton = e => {\n        e.preventDefault();\n        setDisplay(false);\n    };\n\n    const handleLikeEvent = e => {\n      if (!handleLike) return\n\n      if (apartmentIsLiked() === true) {\n        handleLike(\"unlike\", apartment.id)\n      }\n      else{\n        handleLike(\"like\", apartment.id)\n      }\n    }\n\n    const apartmentIsLiked = () => {\n      if (!likedApts) return\n      return !!likedApts.find(aptId => apartment.id === aptId)\n    }\n\n    const handleDislikeEvent = e => {\n      if (!handleDislike) return\n\n      if (apartmentIsDisliked() === true) {\n        handleDislike(\"undislike\", apartment.id)\n      }\n      else{\n        handleDislike(\"dislike\", apartment.id)\n      }\n    }\n\n    // const apartmentIsDisliked = () => {\n    //   return !!dislikedApts.find(aptId => apartment.id === aptId)\n    // }\n\n    // const [dislike, setDisliked] = useState(false)\n    // const handleDislike = e => {\n    //   setDisliked(!dislike)\n    // }\n\n    //controlled carousel \n    const renderCarousel = () => {\n        return apartment.images.map(image => \n        <Carousel.Item>\n            <img\n                className=\"cardImage\" \n                src={image.url}\n                alt=\"uh oh!\"\n                key={image.url}\n            />\n        </Carousel.Item>)\n    }\n\n    const [index, setIndex] = useState(0);\n\n    const handleSelect = (selectedIndex, e) => {\n      setIndex(selectedIndex);\n    };\n  \n    //handling modal \n    const [modalShow, setModalShow] = useState(false)\n\n    function CenteredModal(props) {\n        return (\n          <Modal\n            {...props}\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            animation={false}\n            scrollable={true}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n                {apartment.title}\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Carousel activeIndex={index} onSelect={handleSelect} interval={null} slide={true}>\n                {renderCarousel()}\n                </Carousel>\n              <div className=\"d-flex justify-content-around\" style={{height: '60px'}}> \n                {apartmentIsDisliked() ? <FaThumbsDown color=\"red\" size=\"35px\" onClick={handleDislikeEvent} className=\"align-self-center\"/> : <FaRegThumbsDown color=\"red\" size=\"35px\" onClick={handleDislikeEvent} className=\"align-self-center\"/> }\n                {apartmentIsLiked() ? <FaThumbsUp color=\"green\" size=\"35px\" onClick={handleLikeEvent} className=\"align-self-center\"/> : <FaRegThumbsUp color=\"green\" size=\"35px\" onClick={handleLikeEvent} className=\"align-self-center\"/>}\n              </div>\n              <h4>Description</h4>\n              <ul>\n                  <li>${apartment.price}/month</li> \n                  <li>{apartment.bedrooms} bed {apartment.bathrooms} bath</li>\n                  <li>{apartment.square_feet} square feet</li>\n              </ul>\n              <p>\n                {apartment.description}\n              </p>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n          </Modal>\n        );\n      }\n\n    const handleClick = (e) => {\n      if (e.target.tagName === 'SPAN' || e.target.tagName === 'LI' || e.target.tagName === 'svg' || e.target.tagName === 'path') return\n      setModalShow(true)\n    }\n\n    return (\n        <>\n        <Card className=\"shadow\" onMouseEnter={e => showButton(e)} onMouseLeave={e => hideButton(e)} onClick={ handleClick }>\n            <Carousel className='flex-grow-1' activeIndex={index} onSelect={handleSelect} interval={null}>\n                {renderCarousel()}\n            </Carousel>\n            <Container className=\"spec-container d-flex justify-content-between align-items-center border-bottom\">\n                <span>{apartment.bedrooms} bed {apartment.bathrooms} bath</span>\n                <BiRadioCircle/>\n                <span>{apartment.square_feet} sq. ft.</span>\n                <BiRadioCircle/>\n                <span>${apartment.price}</span>\n            </Container>\n            <div className=\"d-flex justify-content-between align-items-center\">\n                {apartmentIsDisliked() ? <FaThumbsDown color=\"red\" size=\"35px\" onClick={handleDislikeEvent}/> : <FaRegThumbsDown color=\"red\" size=\"35px\" onClick={handleDislikeEvent}/> }\n                <h6 className='card-title' style={{width: '20rem'}}>{apartment.title}</h6>\n                {apartmentIsLiked() ? <FaThumbsUp color=\"green\" size=\"35px\" onClick={handleLikeEvent}/> : <FaRegThumbsUp color=\"green\" size=\"35px\" onClick={handleLikeEvent}/>}    \n            </div>\n        </Card>\n        <CenteredModal\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n        />\n        </>\n    );\n}\n\nexport default Tile;","/Users/alec/Flatiron/code/phase-4-project/apartment-frontend/src/components/TileBlank.js",["62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":65,"column":56,"nodeType":"70","messageId":"71","endLine":65,"endColumn":58},{"ruleId":"68","severity":1,"message":"69","line":91,"column":56,"nodeType":"70","messageId":"71","endLine":91,"endColumn":58},{"ruleId":"68","severity":1,"message":"69","line":117,"column":56,"nodeType":"70","messageId":"71","endLine":117,"endColumn":58},{"ruleId":"72","severity":1,"message":"73","line":54,"column":13,"nodeType":"74","endLine":54,"endColumn":84},{"ruleId":"72","severity":1,"message":"73","line":56,"column":17,"nodeType":"74","endLine":56,"endColumn":79},{"ruleId":"75","severity":1,"message":"76","line":16,"column":12,"nodeType":"77","messageId":"78","endLine":16,"endColumn":19},{"ruleId":"75","severity":1,"message":"79","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":16},{"ruleId":"75","severity":1,"message":"80","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":17},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'display' is assigned a value but never used.","Identifier","unusedVar","'Carousel' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]